name: Hugo Website Build Test CI

on:
  push:
    branches: [ gh-actions ]
  pull_request:
    branches: [ gh-actions ]

jobs:
  buildtest:
    runs-on: ubuntu-latest

    steps:
      - name: npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: hugo cache
        uses: actions/cache@v2
        with:
          path: ~/cache/hugo
          key: ${{ runner.os }}-hugo-
          restore-keys: |
            ${{ runner.os }}-hugo-
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2.4.13
        with:
          extended: true
      - name: Hugo Website Build
        run: hugo --minify --config config.test.toml
        env:
          HUGO_CACHEDIR: :resourceDir/hugo
# name: Build Container Image

# on:
#   push:
#     paths:
#       - 'Dockerfile'
#       - '.github/workflows/**'
#       - 'lib/ogp-getter'

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Docker meta
#         id: meta
#         uses: crazy-max/ghaction-docker-meta@v2
#         with:
#           images: ghcr.io/${{ github.repository }}

#       - name: Set up Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to ghcr.io
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build and Push
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: ${{ github.event_name != 'pull_request' }}
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#     services:
#         ogp-getter:
#           image: latest
#           ports: 
#             - 4040:4040

